# Generated by Django 5.2 on 2025-07-07 20:08

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):
    dependencies = [
        ("health_app", "0004_remove_customuser_username"),
    ]

    operations = [
        migrations.AlterModelOptions(
            name="chatlog",
            options={"ordering": ["timestamp"]},
        ),
        migrations.RenameField(
            model_name="chatlog",
            old_name="prompt",
            new_name="message",
        ),
        migrations.RemoveField(
            model_name="chatlog",
            name="response",
        ),
        migrations.AddField(
            model_name="chatlog",
            name="diagnosis",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="chat_logs_diagnosis",
                to="health_app.aidiagnosisresponse",
            ),
        ),
        migrations.AddField(
            model_name="chatlog",
            name="diagnosis_references",
            field=models.ManyToManyField(
                blank=True,
                related_name="chat_logs_references",
                to="health_app.aidiagnosisresponse",
            ),
        ),
        migrations.AddField(
            model_name="chatlog",
            name="image",
            field=models.ImageField(blank=True, null=True, upload_to="chat_images/"),
        ),
        migrations.AddField(
            model_name="chatlog",
            name="is_user",
            field=models.BooleanField(default=True),
        ),
        migrations.AddField(
            model_name="chatlog",
            name="related_message",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                related_name="related_messages",
                to="health_app.chatlog",
            ),
        ),
        migrations.AddField(
            model_name="chatlog",
            name="symptom_references",
            field=models.ManyToManyField(
                blank=True, related_name="chat_logs", to="health_app.symptom"
            ),
        ),
    ]
